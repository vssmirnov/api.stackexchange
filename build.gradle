group 'api.stackexchange'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/libs-snapshot" }
    }
    dependencies {
        classpath  'org.springframework.boot:spring-boot-gradle-plugin:1.3.6.RELEASE'
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: 'jetty'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

war {
    baseName = 'myapp'
    version =  '0.5.0'
}

dependencies {
    compile (
            'org.springframework:spring-webmvc:4.1.5.RELEASE',
            'org.slf4j:slf4j-api:1.7.10',
            'javax.servlet:jstl:1.2',
            'org.codehaus.jackson:jackson-mapper-lgpl:1.9.0',
            'org.springframework.boot:spring-boot-starter-web'
    )
    providedCompile(
            'javax.servlet:javax.servlet-api:3.1.0',
    )
    providedRuntime(
            'org.springframework.boot:spring-boot-starter-tomcat'
    )
    runtime(
            'log4j:log4j:1.2.17',
            'org.slf4j:jcl-over-slf4j:1.7.10',
            'org.slf4j:slf4j-log4j12:1.7.10',
    )
    testCompile(
            'junit:junit:4.12',
            'org.springframework:spring-test:4.1.5.RELEASE'
    )
}

bootRepackage {
    mainClass = 'webapp.config.WebAppConfig'
}

task('wrapper', type: Wrapper) {
    gradleVersion = '2.4'
}

task stage() {
    dependsOn clean, war
}
tasks.stage.doLast() {
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/assetCompile")
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/libs", exclude: "*.war")
}
war.mustRunAfter clean

task copyToLib(type: Copy) {
    from(configurations.compile) {
        include "webapp-runner*"
    }
    into "$build/server"
}

stage.dependsOn(copyToLib)

